@page "{id:int}"
@model AR_Navigation.Pages.Mappoints.detailModel
@{
    Layout = "_AdminLayout";
}
<head>

</head>
<style>
    .selected-image-container {
        width: 1300px;
        height: 400px;
        border: 2px solid #ced4da;
        border-radius: 10px;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 10px;
        position: relative;
    }

        .selected-image-container img {
            width: 100%;
            height: 260px;
            display: block;
            margin-bottom: 10px;
        }



    .zoom-btn {
        background-color: #fff;
        border: 1px solid #ddd;
        padding: 5px;
        margin-right: 5px;
        cursor: pointer;
    }

    .img-magnifier-glass {
        position: absolute;
        border: 3px solid #000;
        border-radius: 50%;
        cursor: none;
        width: 100px;
        height: 100px;
    }

    .selected-image-container2 {
        width: 400px;
        height: 200px;
        border: 2px solid #ced4da;
        border-radius: 10px;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 10px;
    }

        .selected-image-container2 img {
            max-width: 100%;
            max-height: 100%;
            border-radius: 8px;
        }

    canvas {
        width: 100%;
        background-image: url("/Images/Alpha_tang1.jpg");
        background-position: center;
        background-size: 100%;
        background-clip: border-box;
        background-repeat: no-repeat;
    }
</style>
<div class="page-header no-gutters">
    <h1>Mappoint Detail</h1>
    <div class="row align-items-md-center">
        <div class="col-md-12">
            <div class="text-md-right m-v-10" id="button-change">
            </div>
        </div>
    </div>
</div>
<div class="container">
  

    <!-- Map Image -->
    <button type="button" id="setRootButton" onclick="setRoot()">Set Root</button>
    <button type="button" id="getMPButton">Get Mappoints</button>
    <button type="button" id="connectEdgeButton" onclick="setEdge()">Connect Edge</button>
    <button type="button" id="undoButton" onclick="undo()">Undo</button>
    <div class="selected-image-container" id="map-images-container">
        <canvas id="canvas_data" width="1065%"
                onclick="drawLine(event,this),pixelLocation(event), databaseLocation(event), count()">
        </canvas>
    </div>
    <div id="demo"></div>
    <div id="demo1"></div>
    <button id="clear-canvas-btn">Delete draw</button>
</div>

<!-- Content Wrapper END -->
@* Modal Map Image*@
<div class="modal fade" id="add-edit-MapImage-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Map Image</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <i class="anticon anticon-close"></i>
                </button>
            </div>
            <div class="modal-body">
                <form asp-page="/Buildings/Detail" asp-page-handler="AddOrEditMap" id="form-add-edit-mapImage" method="post" enctype="multipart/form-data">
                    <input type="hidden" name="FloorId" id="floor-id" value="">
                    <div class="form-group">
                        <label for="new-map-name">Map Name</label>
                        <input type="text" class="form-control" id="new-map-name" placeholder="Please input Map name" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-mapp-image">Image</label>
                        <div class="input-group">
                            <div class="custom-file">
                                <input type="file" name="ImageFile" class="custom-file-input" id="add-edit-mapImage" aria-describedby="inputGroupFileAddon" onchange="displaySelectedImage(this, 'edit-selected-image-container')">
                                <label class="custom-file-label" for="edit-mapp-image">Choose file</label>
                            </div>
                        </div>
                        <div id="edit-selected-image-container" class="selected-image-container2" style="margin-top: 10px;"></div>
                    </div>
                    <button type="button" class="btn btn-primary" id="add-edit-map-btn">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="/js/MappointDraw.js"></script>
<script>
    document.getElementById('getMPButton').addEventListener('click', function () {
        // Gọi hàm renderPoints từ tệp JavaScript MappointDraw.js và truyền vào mappointList
        renderPoints(mappointList);
    });
    // Delete draw line
    document.getElementById("clear-canvas-btn").addEventListener("click", function () {
        var canvas = document.getElementById('canvas_data');
        var context = canvas.getContext('2d');
        context.clearRect(0, 0, canvas.width, canvas.height); // Xóa tất cả các đường vẽ trên canvas
    });
    $(document).ready(function () {
        //session
        var userJson = sessionStorage.getItem('user');
        if (!userJson) {
            window.location.href = '/Authen/Login';
        }

        var buildingId = window.location.pathname.split("/").pop();

        //Get data builind Detail
        $.ajax({
            url: `https://localhost:7186/api/buildings/${buildingId}`,
            type: 'GET',
            success: function (building) {
                // Cập nhật tên tòa nhà
                $('#building-name').text(building.buildingName);

                // Gửi AJAX request để lấy thông tin về các tầng của tòa nhà
                $.ajax({
                    url: `https://localhost:7186/api/floors?$filter=buildingId eq ${buildingId}`,
                    type: 'GET',
                    success: function (floors) {
                        // Tạo danh sách các tầng
                        var floorOptions = '';
                        floors.forEach(function (floor) {
                            floorOptions += `<option value="${floor.floorId}">${floor.floorName}</option>`;
                        });
                        $('#floor-select').html(floorOptions);

                        // Chọn tầng đầu tiên mặc định
                        if (floors.length > 0) {
                            var defaultFloorId = floors[0].floorId;
                            updateMapImage(defaultFloorId); // Gọi hàm updateMapImage ở đây
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching floors:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while loading floors.'
                        });
                    }
                });
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
                // Xử lý lỗi nếu có
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while loading building details.'
                });
            }
        });

        $('#button-change').on('click', function () {
            // Open the modal
            $('#add-edit-MapImage-modal').modal('show');
        });

        // Event that listens when the user selects a new floor
        $('#floor-select').change(function () {
            var selectedFloorId = $(this).val();
            updateMapImage(selectedFloorId);
            var canvas = document.getElementById('canvas_data');
            var context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);
        });

        //update map image by floor
        function updateMapImage(floorId) {
            $.ajax({
                url: `https://localhost:7186/api/maps?$filter=floorId eq ${floorId}`,
                type: 'GET',
                success: function (maps) {
                    if (maps.length > 0) {
                        var imageSrc = `/Images/${maps[0].mapImage2D}`; // Đường dẫn đến hình ảnh

                        var canvas = document.getElementById('canvas_data');
                        canvas.style.backgroundImage = `url(${imageSrc})`;
                        // Cập nhật nút chỉnh sửa bản đồ
                        $('#button-change').html(`
                                    <button class="btn btn-primary" id="edit-map-button" data-id="${maps[0].mapId}" data-toggle="modal" data-target="#add-edit-MapImage">
                                        <i class="anticon anticon-edit"></i>
                                        <span class="m-l-5">Edit Map</span>
                                    </button>
                                `);
                        $('#add-edit-map-btn').click(function () {
                            var mapid = maps[0].mapid;
                            editmap(mapid);
                        });
                        getMapPointsByMapId(maps[0].mapId);
                    } else {
                        $('#button-change').html(`
                                    <button class="btn btn-primary" id="add-map-button" data-toggle="modal" data-target="#add-edit-MapImage">
                                        <i class="anticon anticon-plus"></i>
                                        <span class="m-l-5">Add Map</span>
                                    </button>
                                `);
                        console.log('No map found for the specified floor.');
                        $('#add-edit-map-btn').click(function () {
                            addNewMap();
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching map details:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while loading map details.'
                    });
                }
            });
        }


        //Add new Map
        function addNewMap() {
            var mapName = $('#new-map-name').val();
            var floorId = $('#floor-select').val();
            var imageInput = $('#add-edit-mapImage');

            var formData = new FormData();

            formData.append('MapName', mapName);
            formData.append('FloorId', floorId);
            if (imageInput[0].files.length > 0) {
                var imageFile = imageInput[0].files[0];
                formData.append('Image2D', imageFile);
            }
            $.ajax({
                url: 'https://localhost:7186/api/maps',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    console.log('Map added successfully:', response);
                    Swal.fire({
                        icon: 'success',
                        title: 'Map added successfully!',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        $('#form-add-edit-mapImage').submit();
                    });
                    $('#add-edit-MapImage-modal').modal('hide');
                },
                error: function (xhr, status, error) {
                    console.error('Error adding map:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while adding the map.'
                    });
                }
            });
        }
        //Khi ấn save
        $('#add-edit-map-btn').click(function () {
            var mapId = $('#edit-map-button').data('id');
            editMap(mapId);
        });
        //Edit Map
        function editMap(mapId) {
            var mapName = $('#new-map-name').val();
            var floorId = $('#floor-select').val();
            var imageInput = $('#add-edit-mapImage');

            var formData = new FormData();
            formData.append('MapName', mapName);
            formData.append('FloorId', floorId);
            formData.append('MapId', mapId);
            if (imageInput[0].files.length > 0) {
                var imageFile = imageInput[0].files[0];
                formData.append('Image2D', imageFile);
            }

            $.ajax({
                url: `https://localhost:7186/api/maps/${mapId}`,
                type: 'PUT',
                data: formData,
                contentType: false,
                processData: false,
                success: function (mapDetails) {
                    console.log('Map update successfully:', mapDetails);
                    Swal.fire({
                        icon: 'success',
                        title: 'Map update successfully!',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        $('#form-add-edit-mapImage').submit();
                    });
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching map details for editing:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while loading map details for editing.'
                    });
                }
            });
        }

        //open Edit
        $(document).on('click', '#edit-map-button', function () {
            var mapId = $(this).data('id');
            showEdit(mapId);
        });
        //show map info
        function showEdit(mapId) {
            $.ajax({
                url: `https://localhost:7186/api/maps/${mapId}`,
                type: 'GET',
                success: function (map) {
                    $('#new-map-name').val(map.mapName);
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching map details:', error);
                    alert('An error occurred while fetching map details.');
                }
            });
        }



        //get MapPoints ByMapId


    });

    //get image when selected
    function displaySelectedImage(input, containerId) {
        var file = input.files[0];
        var reader = new FileReader();

        reader.onload = function (e) {
            var imgElement = document.createElement('img');
            imgElement.src = e.target.result;
            imgElement.className = "img-fluid rounded";

            var selectedImageContainer = document.getElementById(containerId);
            selectedImageContainer.innerHTML = '';
            selectedImageContainer.appendChild(imgElement);
        }

        reader.readAsDataURL(file);
    }

</script>

